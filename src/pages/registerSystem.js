import BodyMain from "../components/body";
import Header from "../components/header";
import "../pages/registerSystem.css";
import { useNavigate, useLocation } from 'react-router-dom';
import { useState } from "react";

export default function PageRegister() {
    // Setup pre-parameters
    const navigate = useNavigate();
    const location = useLocation();
    const { email } = location.state || {};  // ‡πÄ‡∏≠‡∏≤ email ‡∏°‡∏≤‡∏à‡∏≤‡∏Å login page
    const [name, setName] = useState("");
    const [status, setStatus] = useState("");  // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏≤‡∏¢‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
    const [message, setMessage] = useState("");

    const handleSave = async () => {
        try {
            // 1. Update status: 1 for the user
            const updateResponse = await fetch(`https://notify-kifarm-esdqbfc2bycadxav.eastasia-01.azurewebsites.net/update/${email}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    email: email,
                    password: "dummy",
                    status: "1"
                }),
            });

            if (!updateResponse.ok) {
                throw new Error("Update user status failed");
            }

            // 2. Create profile_user with email, name, status, and other fields
            const profileResponse = await fetch("https://notify-kifarm-esdqbfc2bycadxav.eastasia-01.azurewebsites.net/profile_users", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    email: email,
                    name: name,
                    status: status.trim(),  // ‡∏ï‡∏±‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏ó‡πâ‡∏≤‡∏¢
                    comments: null,
                    enduBTN: "0"
                }),
            });

            if (!profileResponse.ok) {
                throw new Error("Create profile user failed");
            }

            setMessage("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!");
            navigate('/home', { state: { email } });
        } catch (error) {
            console.error(error);
            setMessage(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ${error.message}`);
        }
    };

    return (
        <div>
            <Header />
            <div className="mainregister">
                <div className="TextHeader">‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤</div>
                <div className="bodyRegister">
                    <div>name</div>
                    <input
                        type="text"
                        value={name}
                        onChange={(e) => setName(e.target.value)}
                        placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
                    />

                    <div>status</div>
                    <textarea
                        value={status}
                        onChange={(e) => setStatus(e.target.value)}
                        rows={4}
                        maxLength={500}
                        placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏â‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏Å‡∏£‡∏≠‡∏¥‡∏ô‡∏ó‡∏£‡∏µ‡∏¢‡πå ü•¨\n‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡πÑ‡∏Å‡πà ‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏ß‡∏±‡∏ß üêîüêÑ"
                        style={{ width: "100%", resize: "vertical" }}
                    />
                    <div style={{ fontSize: "0.9em", color: "#555" }}>
                        {status.length}/500 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
                    </div>

                    <button onClick={handleSave}>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>

                    {message && <p>{message}</p>}
                </div>
            </div>
        </div>
    );
}


